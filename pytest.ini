[tool:pytest]
# Конфигурация pytest для ДОПРОС MVP 2.0

# Директории для поиска тестов
testpaths = tests

# Паттерны файлов тестов
python_files = test_*.py *_test.py

# Паттерны классов тестов
python_classes = Test*

# Паттерны функций тестов
python_functions = test_*

# Маркеры
markers =
    slow: медленные тесты (длительность > 10 секунд)
    gpu: тесты, требующие GPU
    integration: интеграционные тесты
    unit: юнит-тесты
    compatibility: тесты совместимости
    performance: тесты производительности
    network: тесты, требующие сетевого подключения
    models: тесты ML моделей
    pipeline: тесты пайплайна

# Минимальный уровень логирования для тестов
log_level = WARNING

# Формат логов в тестах
log_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_date_format = %Y-%m-%d %H:%M:%S

# Показывать логи в реальном времени
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Опции для отображения результатов
addopts = 
    --verbose
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --durations=10
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=60

# Игнорировать предупреждения
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning
    ignore:.*CUDA.*:UserWarning
    ignore:.*GPU.*:UserWarning
    ignore:.*tensorflow.*:UserWarning

# Переменные окружения для тестов
env =
    PYTHONPATH = .
    CUDA_VISIBLE_DEVICES = ""
    TF_CPP_MIN_LOG_LEVEL = 3
    PYTORCH_ENABLE_MPS_FALLBACK = 1

# Минимальная версия pytest
minversion = 6.0

# Настройки покрытия кода
[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */node_modules/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov